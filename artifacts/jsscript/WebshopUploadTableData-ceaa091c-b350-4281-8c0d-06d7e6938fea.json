{
	"id": "ceaa091c-b350-4281-8c0d-06d7e6938fea",
	"createdAt": "2018-04-28T22:39:28.000Z",
	"createdBy": "morten",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [
		{
			"id": "61836814-c0b8-4523-95c1-753afe37cc46",
			"selected": true,
			"name": "p9productfeature",
			"contextname": ""
		},
		{
			"id": "52fb9bcb-cc9c-4127-879d-143d5fd99f18",
			"selected": true,
			"name": "p9countries",
			"contextname": ""
		},
		{
			"id": "71c1f043-73d3-4a85-a12f-2fe7fe33eb1b",
			"selected": true,
			"name": "p9productdescription",
			"contextname": ""
		},
		{
			"id": "1e422fda-e5ac-4672-bcbe-319ad104f176",
			"selected": true,
			"name": "p9productcategory",
			"contextname": ""
		},
		{
			"id": "81a5f20a-71b1-449a-81da-b6f0557de010",
			"selected": true,
			"name": "p9product",
			"contextname": ""
		},
		{
			"id": "d2643288-07fc-46fa-a6d7-188ce047883d",
			"selected": true,
			"name": "p9media",
			"contextname": ""
		},
		{
			"id": "349d5378-23ce-4f2d-b364-2c9f71cc5fe6",
			"selected": true,
			"name": "p9warehouse",
			"contextname": ""
		},
		{
			"id": "18ca3c19-1aef-47af-ab5d-cee87d746676",
			"selected": true,
			"name": "p9stock",
			"contextname": ""
		},
		{
			"id": "d64e3997-72de-4aa5-af35-a4af954dca88",
			"selected": true,
			"name": "p9customer",
			"contextname": ""
		}
	],
	"apis": [],
	"name": "WebshopUploadTableData",
	"ver": "18.8.20.146",
	"description": "Webshop: Upload Table Data",
	"content": [
		"==OBJECT STRING==",
		"// log.info(JSON.stringify(req.files.fileUploader[0].mimetype));",
		"",
		"// get additional data from the sap.ui.unified.FileUploader object",
		"// table type to add data to",
		"let tableName = req.body[\"fileUploader-data\"];",
		"",
		"// get the data from the sap.ui.unified.FileUploader object",
		"let dataString = req.files.fileUploader[0].data;",
		"// log.info(JSON.stringify(dataString));",
		"",
		"// data must be encoded. This dataset is a string type => utf-8 ",
		"let dataEncoded = dataString.toString('utf-8');",
		"// log.info(JSON.stringify(dataEncoded));",
		"",
		"// The .csv file will have a BOM character in the begining, remove it...",
		"if (dataEncoded.charCodeAt(0) === 65279) {",
		"    dataEncoded = dataEncoded.slice(1);",
		"}",
		"",
		"// split the semicolon separated data into records at new line",
		"let dataArray = dataEncoded.split(/[\\r\\n]+/);",
		"// log.info( (Array.isArray(dataArray)) ? \"array\" : typeof splitArray);",
		"",
		"var tableData = [];",
		"",
		"try {",
		"",
		"    var tableDefinition = [];",
		"",
		"    for (i = 0; i < dataArray.length; i++) {",
		"",
		"        let dataRecord = dataArray[i];",
		"        // log.info(JSON.stringify(dataRecord));",
		"",
		"        // get the semicolon separated text",
		"        if (dataRecord) {",
		"            ",
		"            let textArray = dataRecord.split(';');",
		"            // log.info(JSON.stringify(textArray));",
		"",
		"            if (i === 0) {",
		"",
		"                // first line, table fields",
		"                tableDefinition = textArray;",
		"                // log.info(JSON.stringify(tableDefinition));",
		"",
		"            } else {",
		"",
		"                var tableObject = {};",
		"",
		"                for (j = 0; j < textArray.length; j++) {",
		"                    tableObject[tableDefinition[j]] = textArray[j];",
		"                }",
		"                ",
		"                // tableObject.id = uuid();",
		"                // tableObject.createdBy = req.user.username;",
		"                // tableObject.changedBy = req.user.username;",
		"                // log.info(JSON.stringify(tableObject));",
		"                ",
		"                tableData.push(tableObject);",
		"",
		"                // await tables[tableName].create(tableObject);",
		"            }",
		"        }",
		"    }",
		"    // log.info(JSON.stringify(tableData));",
		"    result = setStatus(0, \"Tabledata \" + tableName + \" uploaded successfully\", tableData);",
		"",
		"} catch (e) {",
		"    result = setStatus(99, e);",
		"}",
		"",
		"complete();",
		"",
		"function setStatus(code, text, tableData) {",
		"    return {",
		"        result: {",
		"            statusCode: code,",
		"            statusText: text",
		"        },",
		"        tableData: tableData",
		"    };",
		"}",
		"",
		"// log.info(\"Script API Triggered, by \" + req.user.username);",
		"// log.info(JSON.stringify(req));",
		"// log.info( (Array.isArray(req.query)) ? \"array\" : typeof req.query);",
		"// log.info(JSON.stringify(req.body));",
		"// log.info(req.files.fileUploader.toString());",
		"// log.info(req);",
		"// log.info('Object length: ' + Object.keys(req.body).length);",
		"// for (var key in req.body) {",
		"//     log.info( (Array.isArray(key)) ? \"array\" : typeof key);",
		"//     log.info(key.toString());",
		"//     log.info(JSON.stringify(key));",
		"// }",
		"// log.info(typeof req.files.fileUploader[0].data);",
		"// log.info(typeof req.files.fileUploader[0].data.data);",
		"// log.info(req.files.fileUploader[0].data.data);",
		"// body",
		"// Processingquery",
		"// params",
		"// files.fileUploader",
		"// headers",
		"// header",
		"// rawHeaders",
		"// url",
		"// query"
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": false,
	"jsscriptGroup": "b348e8c2-3ad0-4d52-8334-58f371f58d7c",
	"package": "3b6d7a6b-5bd6-40e8-b5d4-70e4be5c46e0"
}