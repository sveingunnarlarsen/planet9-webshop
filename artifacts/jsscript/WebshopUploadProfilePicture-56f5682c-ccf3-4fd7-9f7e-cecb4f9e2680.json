{
	"id": "56f5682c-ccf3-4fd7-9f7e-cecb4f9e2680",
	"createdAt": "2018-05-08T13:58:59.000Z",
	"createdBy": "morten",
	"globalScripts": [],
	"externalModules": [
		{
			"path": "jimp",
			"contextname": "jimp",
			"enabled": true
		},
		{
			"path": "buffer",
			"contextname": "buffer",
			"description": "",
			"enabled": true
		}
	],
	"entitySets": [
		{
			"id": "d64e3997-72de-4aa5-af35-a4af954dca88",
			"selected": true,
			"name": "p9customer",
			"contextname": ""
		}
	],
	"apis": [],
	"name": "WebshopUploadProfilePicture",
	"ver": "18.8.20.146",
	"description": "Webshop: Upload Profile Picture",
	"content": [
		"==OBJECT STRING==",
		"// try {",
		"//     console.log(modules.jimp);",
		"//     const Jimp = modules.jimp;",
		"//     console.log(\"jimpTest -> Jimp.FONT_SANS_8_BLACK: \" + Jimp.FONT_SANS_8_BLACK);",
		"//     // console.log(modules.xpath);",
		"//     const Buffer = modules.buffer.Buffer;",
		"//     var buf = Buffer.from('ABC');",
		"//     console.log(\"jimpTest -> buf: \" + buf);",
		"// } catch (e) {",
		"//     console.log('jimpTest: ERROR -> ' + e);",
		"// }",
		"// complete();",
		"",
		"try {",
		"    ",
		"    console.log(modules.jimp);",
		"    const Jimp = modules.jimp;",
		"    log.info(\"jimpTest -> Jimp.FONT_SANS_8_BLACK: \" + Jimp.FONT_SANS_8_BLACK);",
		"",
		"    // console.log(modules.xpath);",
		"",
		"    const Buffer = modules.buffer.Buffer;",
		"    // var buf = Buffer.from('ABC');",
		"    // log.info(\"jimpTest -> buf: \" + buf);",
		"",
		"    var imgdata =",
		"        \"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyFpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8 IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTQyIDc5LjE2MDkyNCwgMjAxNy8wNy8xMy0wMTowNjozOSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpGNDQxRDgyMTU2M0YxMUU4OEYwMUNFMzU4OEYwNUE2RCIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpGNDQxRDgyMjU2M0YxMUU4OEYwMUNFMzU4OEYwNUE2RCI IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOkY0NDFEODFGNTYzRjExRTg4RjAxQ0UzNTg4RjA1QTZEIiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOkY0NDFEODIwNTYzRjExRTg4RjAxQ0UzNTg4RjA1QTZEIi8 IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8 oOF7WgAAAndJREFUeNrEl01IVFEUxyez73LIQjN0UYZgiVPQIKjYahaukjaCEO1s0UaCFroIt6JF4PhRTVE04ErBdRNukjBlDB2M8bNAxqQcLENMK/1fOAOHw53xvXfH8cAPHu/ec87lvPNxn8vlXG6AZRAHta59kEGwTQw5NZJlcIAT7Pl4Jg9wBJSDXPbODa6CY3sZ8svgEYiC/yz8nDnQCTzpdHwSdID1JE51/AF cNrU SUwZsOxZBKUOXVeDBY0RiOgFUywd9PgIfik2R8DV5xk LgwtALuUhIqecfWPtK7bHAHLAndqN3P0SEMzGpC ZKt92s XUTYeG7VeQklUUIxThUgJR/0gAAo0qxfEJH4B65ZOcBjcfJGgySuF7ZeWGkyc0zhM31XE FV9A2cStUJL1LoEhIEfw0P8Ep8tlK5oYaSKKQpowl6HyBlLmcpsQaoNXNRbbqbdMOaMg7RMPOpzT8tNpVnwskTUYY8mu0Wbf5WSocshlLuO5zk2WXH5kEKkQrvD r3Z9iGGUrKYdAMfrG1cSo/VWr3waJYKwAbYI0 V0Lmya7qng/kiTwiRC1pGGb3hM2qVJuPgq8iCQ8YHuADs/cd5Oym4Bcnvm3g/Kaw9caKkur5W0xpmfqDFDVc2uiSkqdZPy iqaiwevIuTe0Wiz29bL1PrBWCUWEjaCd0bmrDcq43sJzg43iU6d7S3CO JInSrnfAmKZ5jFDZhcXMaALvNfvVPeK60yRS TBlcCVTPcRrWseqMT2loWTH WtwLp23Yy8Nn8UUTmM0/Sr38v8ghxzwS6lqrdXpuIbbkbciMTP b7iZ5Dlj4qMJugrqnBrZEWAAIWQqFhXrSN4AAAAASUVORK5CYII=\";",
		"    var imagedata = \"\";",
		"    // console.log(modules.jimp);",
		"",
		"    // log.info(JSON.stringify(req.files.fileUploader[0].mimetype));",
		"",
		"    // get additional data from the sap.ui.unified.FileUploader object",
		"    // table type to add data to",
		"    // let tableName = req.body[\"fileUploader-data\"];",
		"",
		"    // get the data from the sap.ui.unified.FileUploader object",
		"    // let dataString = req.files.fileUploader[0].data;",
		"    // log.info(JSON.stringify(dataString));",
		"",
		"    // data must be encoded. This dataset is a string type => utf-8 ",
		"    // ***********************************************************************//",
		"    // let dataEncoded = dataString.toString('base64');",
		"    // ***********************************************************************//",
		"    // ascii",
		"    // utf8",
		"    // utf16le",
		"    // ucs2 (alias of utf16le)",
		"    // base64",
		"    // binary",
		"    // hex",
		"    // log.info(JSON.stringify(dataEncoded));",
		"",
		"    if (req.query) {",
		"",
		"        imgdata = req.query.imageData;",
		"",
		"    }",
		"    log.info(\"WebshopUploadProfileImage -> imgdata: \" + imgdata);",
		"",
		"    let dataEncoded = imgdata.toString('base64');",
		"    log.info(\"WebshopUploadProfileImage -> encoded: \" + dataEncoded);",
		"    ",
		"    // let base64Image = Buffer(original_data, 'binary').toString('base64');",
		"",
		"    // var b64string = /* whatever */;",
		"    // var imageBuffer = Buffer.from(dataEncoded, 'base64');",
		"    // var imageBuffer = Buffer.from(dataEncoded, 'binary');",
		"    var imageBuffer = Buffer.from(imgdata, 'binary');",
		"    log.info(\"WebshopUploadProfileImage -> buffer ok...\");",
		"    log.info(\"WebshopUploadProfileImage -> imageBuffer: \" + imageBuffer);",
		"",
		"    // // imgdata = req.query.imageData;",
		"",
		"    Jimp.read(imageBuffer).then(function(imagedata) {",
		"        imagedata.resize(16, 16); // resize",
		"        // .quality(60);        // set JPEG quality",
		"    }).catch(function(err) {",
		"        log.info('Jimp: ERROR -> ' + err);",
		"    });",
		"",
		"",
		"",
		"    // Jimp.read(buffer, function(err, imagedata) {",
		"    //     if (err) throw err;",
		"    //     imagedata.resize(16, 16) // resize",
		"    //         .quality(60) // set JPEG quality",
		"    //         .greyscale(); // set greyscale",
		"    //     // .write(\"lena-small-bw.jpg\"); // save",
		"    // });",
		"",
		"    log.info(\"WebshopUploadProfileImage -> imagedata: \" + imagedata);",
		"",
		"    // result = {",
		"    //     result: {",
		"    //         user: {",
		"    //             imageData: ''",
		"    //         }",
		"    //     }",
		"    // };",
		"",
		"    // result = setStatus(0, \"Tabledata \" + tableName + \" uploaded successfully\", dataEncoded);",
		"",
		"    // }",
		"    // catch (e) {",
		"    //     result = setStatus(99, e);",
		"    // }",
		"",
		"",
		"} catch (e) {",
		"    // result = setStatus(99, e);",
		"    // log.info('WebshopUploadProfileImage: ERROR -> ' + JSON.stringify(e));",
		"    log.info('WebshopUploadProfileImage: ERROR -> ' + e);",
		"}",
		"complete();",
		"",
		"// function setStatus(code, text, tableData) {",
		"//     return {",
		"//         result: {",
		"//             statusCode: code,",
		"//             statusText: text",
		"//         },",
		"//         imageData: imageData",
		"//     };",
		"// }",
		"",
		"// log.info(\"Script API Triggered, by \" + req.user.username);",
		"// log.info(JSON.stringify(req));",
		"// log.info( (Array.isArray(req.query)) ? \"array\" : typeof req.query);",
		"// log.info(JSON.stringify(req.body));",
		"// log.info(req.files.fileUploader.toString());",
		"// log.info(req);",
		"// log.info('Object length: ' + Object.keys(req.body).length);",
		"// for (var key in req.body) {",
		"//     log.info( (Array.isArray(key)) ? \"array\" : typeof key);",
		"//     log.info(key.toString());",
		"//     log.info(JSON.stringify(key));",
		"// }",
		"// log.info(typeof req.files.fileUploader[0].data);",
		"// log.info(typeof req.files.fileUploader[0].data.data);",
		"// log.info(req.files.fileUploader[0].data.data);",
		"// body",
		"// Processingquery",
		"// params",
		"// files.fileUploader",
		"// headers",
		"// header",
		"// rawHeaders",
		"// url",
		"// query"
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": false,
	"jsscriptGroup": "b348e8c2-3ad0-4d52-8334-58f371f58d7c",
	"package": "3b6d7a6b-5bd6-40e8-b5d4-70e4be5c46e0"
}